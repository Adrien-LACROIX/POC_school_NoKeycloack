name: Owaps ZAP
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  devsecops:
    runs-on: ubuntu-latest

    steps:
    # ‚úÖ 1. Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # ‚úÖ 2. Setup Go
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    # ‚úÖ 3. Build the Go project
    - name: Build Go app
      run: |
        make clean
        make build-test

    # ‚úÖ 4. Start the Go web server
    - name: Start Go Web Server
      run: |
        chmod +x script/launchDB.sh
        sudo ./script/launchDB.sh
        sleep 20

        chmod +x build/test/POC_app-test
        nohup ./build/test/POC_app-test &
        echo "‚è≥ Waiting for server to be ready..."
        for i in {1..30}; do
          curl -s http://localhost:8080 >/dev/null && echo "‚úÖ Server is up!" && exit 0
          sleep 2
        done
        echo "‚ùå Server did not respond in time"
        exit 1


    # ‚úÖ 5. OWASP ZAP scan with fail check
    - name: Run ZAP Scan + Fail on risk
      run: |
        docker pull ghcr.io/zaproxy/zaproxy:stable
        docker run --network="host" \
          -v ${{ github.workspace }}:/zap/wrk:rw \
          -t ghcr.io/zaproxy/zaproxy:stable \
          zap-baseline.py \
            -t http://localhost:8080 \
            -r zap-report.html \
            -x zap-report.xml \
            -J zap-report.json \
            -d

        echo "üîé Analyzing ZAP output..."
        HIGH=$(jq '[.site[].alerts[] | select(.riskcode=="3")] | length' zap-report.json)
        MEDIUM=$(jq '[.site[].alerts[] | select(.riskcode=="2")] | length' zap-report.json)

        echo "‚û°Ô∏è High: $HIGH | Medium: $MEDIUM"
        if [ "$HIGH" -gt 0 ] || [ "$MEDIUM" -gt 0 ]; then
          echo "‚ùå Critical ZAP alerts detected"
          exit 1
        else
          echo "‚úÖ No critical ZAP alerts"
        fi

    # ‚úÖ 6. Upload the ZAP Report
    - name: Upload ZAP Report
      uses: actions/upload-artifact@v4
      with:
        name: ZAP Security Report
        path: zap-report.html
